generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Item {
  id                  Int         @id @default(autoincrement())
  createdAt           DateTime    @default(now())
  name                String
  description         String      @db.Text
  front               String      @db.Text
  back                String      @db.Text
  status              ItemStatus  @default(DRAFT)
  stripeProductId     String      @unique
  stripePaymentLinkId String      @unique
  stripePaymentLink   String      @db.Text
  userId              String      @default("anonymous")
  publicationId       Int
  publication         Publication @relation(fields: [publicationId], references: [id])
  test                Boolean     @default(false)
  size                ItemSize    @default(sz_6x9)
  Messages            Message[]
  visibility          Visibility  @default(PRIVATE)

  @@index([publicationId])
}

model Publication {
  id          Int               @id @default(autoincrement())
  createdAt   DateTime          @default(now())
  name        String
  description String            @db.Text
  imageUrl    String            @db.Text
  authorId    String
  userId      String            @default("anonymous")
  status      PublicationStatus @default(DRAFT)
  Items       Item[]
  test        Boolean           @default(false)

  @@index([userId])
}

// model for custom messages based on the user, item, and message
model Message {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  message   String   @db.Text
  userId    String
  itemId    Int
  item      Item     @relation(fields: [itemId], references: [id])

  @@index([userId])
  @@index([itemId])
}

enum ItemStatus {
  DELETED
  DRAFT
  PUBLISHED
}

enum PublicationStatus {
  DELETED
  DRAFT
  PUBLISHED
}

enum ItemSize {
  sz_4x6
  sz_6x9
  sz_6x11
}

enum Visibility {
  PUBLIC
  PRIVATE
}
